{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/bootstrap-input-spinner/src/input-spinner.js","webpack:///./resources/js/modules/input-spinner.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","$","I18nEditor","props","element","locale","this","parse","customFormat","numberFormat","Intl","NumberFormat","thousandSeparator","format","replace","decimalSeparator","parseFloat","RegExp","render","number","decimals","parseInt","getAttribute","digitGrouping","minimumFractionDigits","maximumFractionDigits","useGrouping","triggerKeyPressed","originalVal","fn","val","onPointerDown","callback","addEventListener","e","button","preventDefault","cancelable","keyCode","arguments","length","setValue","setTimeout","apply","inputSpinner","methodOrProps","each","destroyInputSpinner","decrementButton","incrementButton","groupClass","buttonsClass","buttonsWidth","textAlign","autoDelay","autoInterval","buttonsOnly","keyboardStepping","navigator","language","editor","template","option","html","$original","hide","inputSpinnerEditor","autoDelayHandler","autoIntervalHandler","$inputGroup","$buttonDecrement","find","$buttonIncrement","$input","$label","attr","closest","min","max","step","updateAttributes","prefix","suffix","prefixElement","append","suffixElement","prepend","newValue","prop","observer","disconnect","resetTimer","off","remove","show","MutationObserver","updateInput","undefined","isNaN","NaN","Math","dispatchEvent","$element","type","event","Event","bubbles","document","createEvent","initEvent","stepHandling","calcStep","setInterval","round","clearTimeout","removeAttr","disabled","readonly","originalClass","test","inputClass","Infinity","observe","attributes","after","on","focusOut","which","body","jQuery","window"],"mappings":"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","file":"/js/mix/input-spinner.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 382);\n","/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/bootstrap-input-spinner\n * License: MIT, see file 'LICENSE'\n */\n\n;(function ($) {\n    \"use strict\"\n\n    // the default editor for parsing and rendering\n    var I18nEditor = function (props, element) {\n        var locale = props.locale || \"en-US\"\n\n        this.parse = function(customFormat) {\n            var numberFormat = new Intl.NumberFormat(locale)\n            var thousandSeparator = numberFormat.format(11111).replace(/1/g, '') || '.'\n            var decimalSeparator = numberFormat.format(1.1).replace(/1/g, '')\n            return parseFloat(customFormat\n                .replace(new RegExp(' ', 'g'), '')\n                .replace(new RegExp('\\\\' + thousandSeparator, 'g'), '')\n                .replace(new RegExp('\\\\' + decimalSeparator), '.')\n            )\n        }\n\n        this.render = function(number) {\n            var decimals = parseInt(element.getAttribute(\"data-decimals\")) || 0\n            var digitGrouping = !(element.getAttribute(\"data-digit-grouping\") === \"false\")\n            var numberFormat = new Intl.NumberFormat(locale, {\n                minimumFractionDigits: decimals,\n                maximumFractionDigits: decimals,\n                useGrouping: digitGrouping\n            })\n            return numberFormat.format(number)\n        }\n    }\n\n    var triggerKeyPressed = false\n    var originalVal = $.fn.val\n    $.fn.val = function (value) {\n        if (arguments.length >= 1) {\n            if (this[0] && this[0][\"bootstrap-input-spinner\"] && this[0].setValue) {\n                var element = this[0]\n                setTimeout(function () {\n                    element.setValue(value)\n                })\n            }\n        }\n        return originalVal.apply(this, arguments)\n    }\n\n    $.fn.inputSpinner = function (methodOrProps) {\n\n        if (methodOrProps === \"destroy\") {\n            this.each(function () {\n                this.destroyInputSpinner()\n            })\n            return this\n        }\n\n        var props = {\n            decrementButton: \"<strong>&minus;</strong>\", // button text\n            incrementButton: \"<strong>&plus;</strong>\", // ..\n            groupClass: \"\", // css class of the resulting input-group\n            buttonsClass: \"btn-outline-secondary\",\n            buttonsWidth: \"2.5rem\",\n            textAlign: \"center\", // alignment of the entered number\n            autoDelay: 500, // ms threshold before auto value change\n            autoInterval: 50, // speed of auto value change\n            buttonsOnly: false, // set this `true` to disable the possibility to enter or paste the number via keyboard\n            keyboardStepping: true, // set this to `false` to disallow the use of the up and down arrow keys to step\n            locale: navigator.language, // the locale, per default detected automatically from the browser\n            editor: I18nEditor, // the editor (parsing and rendering of the input)\n            template: // the template of the input\n                '<div class=\"input-group ${groupClass}\">' +\n                '<div class=\"input-group-prepend\"><button style=\"min-width: ${buttonsWidth}\" class=\"btn btn-decrement ${buttonsClass} btn-minus\" type=\"button\">${decrementButton}</button></div>' +\n                '<input type=\"text\" inputmode=\"decimal\" style=\"text-align: ${textAlign}\" class=\"form-control form-control-text-input\"/>' +\n                '<div class=\"input-group-append\"><button style=\"min-width: ${buttonsWidth}\" class=\"btn btn-increment ${buttonsClass} btn-plus\" type=\"button\">${incrementButton}</button></div>' +\n                '</div>'\n        }\n        for (var option in methodOrProps) {\n            // noinspection JSUnfilteredForInLoop\n            props[option] = methodOrProps[option]\n        }\n\n        var html = props.template\n            .replace(/\\${groupClass}/g, props.groupClass)\n            .replace(/\\${buttonsWidth}/g, props.buttonsWidth)\n            .replace(/\\${buttonsClass}/g, props.buttonsClass)\n            .replace(/\\${decrementButton}/g, props.decrementButton)\n            .replace(/\\${incrementButton}/g, props.incrementButton)\n            .replace(/\\${textAlign}/g, props.textAlign)\n\n        this.each(function () {\n\n            var $original = $(this)\n            $original[0][\"bootstrap-input-spinner\"] = true\n            $original.hide()\n            $original[0].inputSpinnerEditor = new props.editor(props, this)\n\n            var autoDelayHandler = null\n            var autoIntervalHandler = null\n\n            var $inputGroup = $(html)\n            var $buttonDecrement = $inputGroup.find(\".btn-decrement\")\n            var $buttonIncrement = $inputGroup.find(\".btn-increment\")\n            var $input = $inputGroup.find(\"input\")\n            var $label = $(\"label[for='\" + $original.attr(\"id\") + \"']\")\n            if (!$label[0]) {\n                $label = $original.closest(\"label\")\n            }\n\n            var min = null\n            var max = null\n            var step = null\n\n            updateAttributes()\n\n            var value = parseFloat($original[0].value)\n\n            var prefix = $original.attr(\"data-prefix\") || \"\"\n            var suffix = $original.attr(\"data-suffix\") || \"\"\n\n            if (prefix) {\n                var prefixElement = $('<span class=\"input-group-text\">' + prefix + '</span>')\n                $inputGroup.find(\".input-group-prepend\").append(prefixElement)\n            }\n            if (suffix) {\n                var suffixElement = $('<span class=\"input-group-text\">' + suffix + '</span>')\n                $inputGroup.find(\".input-group-append\").prepend(suffixElement)\n            }\n\n            $original[0].setValue = function (newValue) {\n                setValue(newValue)\n            }\n            $original[0].destroyInputSpinner = function () {\n                destroy()\n            }\n\n            var observer = new MutationObserver(function () {\n                updateAttributes()\n                setValue(value, true)\n            })\n            observer.observe($original[0], {attributes: true})\n\n            $original.after($inputGroup)\n\n            setValue(value)\n\n            $input.on(\"paste input change focusout\", function (event) {\n                var newValue = $input[0].value\n                var focusOut = event.type === \"focusout\"\n                newValue = $original[0].inputSpinnerEditor.parse(newValue)\n                setValue(newValue, focusOut)\n                dispatchEvent($original, event.type)\n            }).on(\"keydown\", function (event) {\n                if (props.keyboardStepping) {\n                    if (event.which === 38) { // up arrow pressed\n                        event.preventDefault()\n                        if (!$buttonDecrement.prop(\"disabled\")) {\n                            stepHandling(step)\n                        }\n                    } else if (event.which === 40) { // down arrow pressed\n                        event.preventDefault()\n                        if (!$buttonIncrement.prop(\"disabled\")) {\n                            stepHandling(-step)\n                        }\n                    }\n                }\n            }).on(\"keyup\", function (event) {\n                // up/down arrow released\n                if (props.keyboardStepping && (event.which === 38 || event.which === 40)) {\n                    event.preventDefault()\n                    resetTimer()\n                }\n            })\n\n            onPointerDown($buttonDecrement[0], function () {\n                if (!$buttonDecrement.prop(\"disabled\")) {\n                    stepHandling(-step)\n                }\n            })\n            onPointerDown($buttonIncrement[0], function () {\n                if (!$buttonIncrement.prop(\"disabled\")) {\n                    stepHandling(step)\n                }\n            })\n            onPointerUp(document.body, function () {\n                resetTimer()\n            })\n\n            function setValue(newValue, updateInput) {\n                if (updateInput === undefined) {\n                    updateInput = true\n                }\n                if (isNaN(newValue) || newValue === \"\") {\n                    $original[0].value = \"\"\n                    if (updateInput) {\n                        $input[0].value = \"\"\n                    }\n                    value = NaN\n                } else {\n                    newValue = parseFloat(newValue)\n                    newValue = Math.min(Math.max(newValue, min), max)\n                    // newValue = Math.round(newValue * Math.pow(10, decimals)) / Math.pow(10, decimals)\n                    $original[0].value = newValue\n                    if (updateInput) {\n                        // $input[0].value = numberFormat.format(newValue)\n                        $input[0].value = $original[0].inputSpinnerEditor.render(newValue)\n                    }\n                    value = newValue\n                }\n            }\n\n            function destroy() {\n                $original.prop(\"required\", $input.prop(\"required\"))\n                observer.disconnect()\n                resetTimer()\n                $input.off(\"paste input change focusout\")\n                $inputGroup.remove()\n                $original.show()\n                if ($label[0]) {\n                    $label.attr(\"for\", $original.attr(\"id\"))\n                }\n            }\n\n            function dispatchEvent($element, type) {\n                if (type) {\n                    setTimeout(function () {\n                        var event\n                        if (typeof (Event) === 'function') {\n                            event = new Event(type, {bubbles: true})\n                        } else { // IE\n                            event = document.createEvent('Event')\n                            event.initEvent(type, true, true)\n                        }\n                        $element[0].dispatchEvent(event)\n                    })\n                }\n            }\n\n            function stepHandling(step) {\n                calcStep(step)\n                resetTimer()\n                autoDelayHandler = setTimeout(function () {\n                    autoIntervalHandler = setInterval(function () {\n                        calcStep(step)\n                    }, props.autoInterval)\n                }, props.autoDelay)\n            }\n\n\n            function calcStep(step) {\n                if (isNaN(value)) {\n                    value = 0\n                }\n                setValue(Math.round(value / step) * step + step)\n                dispatchEvent($original, \"input\")\n                dispatchEvent($original, \"change\")\n            }\n\n            function resetTimer() {\n                clearTimeout(autoDelayHandler)\n                clearTimeout(autoIntervalHandler)\n            }\n\n            function updateAttributes() {\n                // copy properties from original to the new input\n                if ($original.prop(\"required\")) {\n                    $input.prop(\"required\", $original.prop(\"required\"))\n                    $original.removeAttr('required')\n                }\n                $input.prop(\"placeholder\", $original.prop(\"placeholder\"))\n                $input.attr(\"inputmode\", $original.attr(\"inputmode\") || \"decimal\")\n                var disabled = $original.prop(\"disabled\")\n                var readonly = $original.prop(\"readonly\")\n                $input.prop(\"disabled\", disabled)\n                $input.prop(\"readonly\", readonly || props.buttonsOnly)\n                $buttonIncrement.prop(\"disabled\", disabled || readonly)\n                $buttonDecrement.prop(\"disabled\", disabled || readonly)\n                if (disabled || readonly) {\n                    resetTimer()\n                }\n                var originalClass = $original.prop(\"class\")\n                var groupClass = \"\"\n                // sizing\n                if (/form-control-sm/g.test(originalClass)) {\n                    groupClass = \"input-group-sm\"\n                } else if (/form-control-lg/g.test(originalClass)) {\n                    groupClass = \"input-group-lg\"\n                }\n                var inputClass = originalClass.replace(/form-control(-(sm|lg))?/g, \"\")\n                $inputGroup.prop(\"class\", \"input-group \" + groupClass + \" \" + props.groupClass)\n                $input.prop(\"class\", \"form-control \" + inputClass)\n\n                // update the main attributes\n                min = isNaN($original.prop(\"min\")) || $original.prop(\"min\") === \"\" ? -Infinity : parseFloat($original.prop(\"min\"))\n                max = isNaN($original.prop(\"max\")) || $original.prop(\"max\") === \"\" ? Infinity : parseFloat($original.prop(\"max\"))\n                step = parseFloat($original.prop(\"step\")) || 1\n                if ($original.attr(\"hidden\")) {\n                    $inputGroup.attr(\"hidden\", $original.attr(\"hidden\"))\n                } else {\n                    $inputGroup.removeAttr(\"hidden\")\n                }\n                if ($original.attr(\"id\")) {\n                    $input.attr(\"id\", $original.attr(\"id\") + \"_MP_cBdLN29i2\")\n                    if ($label[0]) {\n                        $label.attr(\"for\", $input.attr(\"id\"))\n                    }\n                }\n            }\n        })\n\n        return this\n    }\n\n    function onPointerUp(element, callback) {\n        element.addEventListener(\"mouseup\", function (e) {\n            callback(e)\n        })\n        element.addEventListener(\"touchend\", function (e) {\n            callback(e)\n        })\n        element.addEventListener(\"keyup\", function (e) {\n            if ((e.keyCode === 32 || e.keyCode === 13)) {\n                triggerKeyPressed = false\n                callback(e)\n            }\n        })\n    }\n\n    function onPointerDown(element, callback) {\n        element.addEventListener(\"mousedown\", function (e) {\n            if (e.button === 0) {\n                e.preventDefault()\n                callback(e)\n            }\n        })\n        element.addEventListener(\"touchstart\", function (e) {\n            if (e.cancelable) {\n                e.preventDefault()\n            }\n            callback(e)\n        })\n        element.addEventListener(\"keydown\", function (e) {\n            if ((e.keyCode === 32 || e.keyCode === 13) && !triggerKeyPressed) {\n                triggerKeyPressed = true\n                callback(e)\n            }\n        })\n    }\n\n}(jQuery))\n","import {inputSpinner} from \"bootstrap-input-spinner/src/input-spinner\";\r\nwindow.inputSpinner = inputSpinner;"],"sourceRoot":""}